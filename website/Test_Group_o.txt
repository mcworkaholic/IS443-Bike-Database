/*
These statements test the max number of rentals a customer can take out at a time (2) 
In this statement the customer starts with 1 rental
*/
DROP TRIGGER member_id_incr;
DROP SEQUENCE member_id_seq;
INSERT INTO customer (member_id, fname, lname, email, password, address, phone, registration_date, num_rentals, unpaid_balance) 
VALUES (1,'Weston', 'Evans', 'weston.evans@go.stcloudstate.edu', 'supersecret', 'SCSU', '555-555-5555', TO_DATE('19-NOV-22'), 1, 0);
INSERT INTO rental_bike (member_id, bike_id, days_out, rented_out) VALUES(1, 1, 3, TO_DATE('19-NOV-22')); --works
INSERT INTO rental_bike (member_id, bike_id, days_out, rented_out) VALUES(1, 2, 3, TO_DATE('19-NOV-22')); --breaks constraint
----------------------------------------------------------------------------------------------------------------------------------
ROLLBACK;
----------------------------------------------------------------------------------------------------------------------------------
/*
These statements test the max balance that a customer can have of $500 before renting out a new bike. 
In this case the customer starts with a balance of $200
*/
DROP TRIGGER member_id_incr;
DROP SEQUENCE member_id_seq;
INSERT INTO customer (member_id,fname, lname, email, password, address, phone, registration_date, num_rentals, unpaid_balance) 
VALUES (1,'Weston', 'Evans', 'weston.evans@go.stcloudstate.edu', 'supersecret', 'SCSU', '555-555-5555', TO_DATE('19-NOV-22'), 0, 200);
INSERT INTO rental_bike (member_id, bike_id, days_out, rented_out) VALUES(1, 1, 8, TO_DATE('19-NOV-22')); --works
INSERT INTO rental_bike (member_id, bike_id, days_out, rented_out) VALUES(1, 2, 1, TO_DATE('19-NOV-22')); --breaks $500 limit for new rentals

/*
Business Rule #2(late fees, status update, location update) will need to be tested out via the application's user interface
*/